name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Run tests (can be skipped with force_deploy)
      if: ${{ !inputs.force_deploy }}
      run: |
        npm run lint
        npm run test

    - name: Build for production
      run: npm run build
      env:
        NODE_ENV: production
        CKKS_API_URL: https://api.ckks.pl
        API: https://api.ckks.pl/api

    - name: Deploy to server
      run: |
        # Install SSH key for server access
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        
        # Use rsync to deploy .next build directory and required files
        rsync -avz --delete .next/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/domains/ckks.edu.pl/public_nodejs/.next/
        rsync -avz package.json package-lock.json server.js ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/domains/ckks.edu.pl/public_nodejs/
        rsync -avz next.config.cjs ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/domains/ckks.edu.pl/public_nodejs/
        rsync -avz pages/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/domains/ckks.edu.pl/public_nodejs/pages/
        rsync -avz --exclude='galeria/*' --exclude='img/*' --exclude='o/*' public/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/domains/ckks.edu.pl/public_nodejs/public/
        
        # Install dependencies and restart on server
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ~/domains/ckks.edu.pl/public_nodejs
          npm ci --only=production
          devil www restart ckks.edu.pl
        EOF

    - name: Health check
      run: |
        sleep 30
        curl -f https://ckks.edu.pl/api/course || exit 1
        echo "âœ… Deployment successful and health check passed"

    - name: Cleanup SSH
      if: always()
      run: |
        rm -f ~/.ssh/id_rsa